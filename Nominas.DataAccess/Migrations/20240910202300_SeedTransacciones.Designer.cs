// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nominas.DataAccess.Data;

#nullable disable

namespace Nominas.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240910202300_SeedTransacciones")]
    partial class SeedTransacciones
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Nominas.Models.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ResponsableDeAreaId")
                        .HasColumnType("int");

                    b.Property<string>("UbicacionFisica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ResponsableDeAreaId")
                        .IsUnique();

                    b.ToTable("Departamentos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "IT",
                            ResponsableDeAreaId = 1,
                            UbicacionFisica = "Edificio A"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Recursos Humanos",
                            ResponsableDeAreaId = 2,
                            UbicacionFisica = "Edificio B"
                        });
                });

            modelBuilder.Entity("Nominas.Models.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Cedula")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NominaId")
                        .HasColumnType("int");

                    b.Property<int>("PuestoId")
                        .HasColumnType("int");

                    b.Property<decimal>("SalarioMensual")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("PuestoId");

                    b.ToTable("Empleados");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Cedula = "001-1234567-8",
                            DepartamentoId = 1,
                            Nombre = "Juan Pérez",
                            NominaId = 1,
                            PuestoId = 1,
                            SalarioMensual = 35000m
                        },
                        new
                        {
                            Id = 2,
                            Cedula = "002-2345678-9",
                            DepartamentoId = 2,
                            Nombre = "Ana Gómez",
                            NominaId = 1,
                            PuestoId = 2,
                            SalarioMensual = 28000m
                        });
                });

            modelBuilder.Entity("Nominas.Models.Puesto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NivelDeRiesgo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("NivelMaximoSalario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NivelMinimoSalario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Puestos");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            NivelDeRiesgo = "Medio",
                            NivelMaximoSalario = 60000m,
                            NivelMinimoSalario = 30000m,
                            Nombre = "Desarrollador"
                        },
                        new
                        {
                            Id = 2,
                            NivelDeRiesgo = "Bajo",
                            NivelMaximoSalario = 50000m,
                            NivelMinimoSalario = 25000m,
                            Nombre = "Analista"
                        });
                });

            modelBuilder.Entity("Nominas.Models.RegistroTransaccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Deduccion")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("Ingreso")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TipoTransaccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.ToTable("RegistroTransacciones");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Deduccion = 200m,
                            EmpleadoId = 1,
                            Estado = "Aprobado",
                            Fecha = new DateTime(2024, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ingreso = 1000m,
                            Monto = 800m,
                            TipoTransaccion = "Ingreso"
                        },
                        new
                        {
                            Id = 2,
                            Deduccion = 150m,
                            EmpleadoId = 2,
                            Estado = "Aprobado",
                            Fecha = new DateTime(2024, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ingreso = 1200m,
                            Monto = 1050m,
                            TipoTransaccion = "Bono"
                        },
                        new
                        {
                            Id = 3,
                            Deduccion = 50m,
                            EmpleadoId = 1,
                            Estado = "Pendiente",
                            Fecha = new DateTime(2024, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Ingreso = 500m,
                            Monto = 450m,
                            TipoTransaccion = "Horas Extras"
                        });
                });

            modelBuilder.Entity("Nominas.Models.TipoDeDeduccion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("DependeDeSalario")
                        .HasColumnType("bit");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposDeDeducciones");
                });

            modelBuilder.Entity("Nominas.Models.TipoDeIngreso", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("DependeDeSalario")
                        .HasColumnType("bit");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TiposDeIngreso");
                });

            modelBuilder.Entity("Nominas.Models.Departamento", b =>
                {
                    b.HasOne("Nominas.Models.Empleado", "ResponsableDeArea")
                        .WithOne()
                        .HasForeignKey("Nominas.Models.Departamento", "ResponsableDeAreaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ResponsableDeArea");
                });

            modelBuilder.Entity("Nominas.Models.Empleado", b =>
                {
                    b.HasOne("Nominas.Models.Departamento", "Departamento")
                        .WithMany("Empleados")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nominas.Models.Puesto", "Puesto")
                        .WithMany()
                        .HasForeignKey("PuestoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Departamento");

                    b.Navigation("Puesto");
                });

            modelBuilder.Entity("Nominas.Models.RegistroTransaccion", b =>
                {
                    b.HasOne("Nominas.Models.Empleado", "Empleado")
                        .WithMany("RegistroTransacciones")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Empleado");
                });

            modelBuilder.Entity("Nominas.Models.Departamento", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("Nominas.Models.Empleado", b =>
                {
                    b.Navigation("RegistroTransacciones");
                });
#pragma warning restore 612, 618
        }
    }
}
